       |ï»¿module draklib.protocol.packet;
       |import draklib.bytestream;
       |import draklib.util : NotImplementedException;
       |
       |abstract class Packet {
       |        void encode(out byte[] data) {
0000000|                ByteStream stream = ByteStream.alloc(getSize());
0000000|                stream.writeUByte(getID());
0000000|                _encode(stream);
0000000|                data = stream.getBuffer().dup;
0000000|                stream.clear();
       |        }
       |
       |        void decode(byte[] data) {
0000000|                ByteStream stream = ByteStream.wrap(data);
0000000|                stream.skip(1); // ID
0000000|                _decode(stream);
       |        }
       |
       |        protected void _encode(ByteStream stream) {
0000000|                throw new NotImplementedException("Encoding has not been implemented by underlying class.");
       |        }
       |
       |        protected void _decode(ByteStream stream) {
0000000|                throw new NotImplementedException("Decoding has not been implemented by underlying class.");
       |        }
       |
       |        abstract uint getSize();
       |        abstract ubyte getID();
       |}
source/draklib/protocol/packet.d is 0% covered
