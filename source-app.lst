       |import std.stdio;
       |import std.array;
       |import std.concurrency;
       |
       |import draklib.logging;
       |import draklib.util;
       |import draklib.server.raknetserver;
       |
       |int main() {
      1|        ServerOptions options = ServerOptions();
      1|        options.serverIdent = "MCPE;A DRakLib Server!;46;0.14.1;0;0";
       |
      1|        RakNetServer server = new RakNetServer(thisTid(), new LoggerImpl(), 19132, "0.0.0.0", options);
      1|        server.start();
       |
       |        //ubyte v = writeBits(cast(bool[]) [false, false, true, false, false, false, false, false]);
       |        //writeln(v);
0000000|    return 0;
       |}
       |
       |class LoggerImpl : Logger {
       |        override {
       |                const void logDebug(in string message) {
      1|                        writeln("[DEBUG]: " ~ message);
       |                }
       |
       |                const void logInfo(in string message) {
0000000|                        writeln("[INFO]: " ~ message);
       |                }
       |
       |                const void logWarn(in string message) {
0000000|                        writeln("[WARN]: " ~ message);
       |                }
       |
       |                const void logError(in string message) {
0000000|                        writeln("[ERROR]: " ~ message);
       |                }
       |
       |                const void logTrace(in string trace) {
0000000|                        foreach(string segment; split(trace, "\n")) {
0000000|                                writeln("[TRACE]: " ~ segment);
       |                        }
       |                }
       |        }
       |}
source/app.d is 45% covered
